paths:
  /api/users/allusers:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Usuarios obtenidos con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'  
        "500":
          description: Algo falló al obtener todos los usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si hubo un error al obtener usuarios
                  message:
                    type: string
                    description: Mensaje de error
  /api/users/find/{id}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a buscar
          schema:
            type: string  # Ajusta esto según el tipo de ID que uses (puede ser "integer" también)
      responses:
        "200":
          description: Usuario obtenido con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'  # Ajusta esto según la estructura de tu usuario
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si el usuario fue encontrado
                  message:
                    type: string
                    description: Mensaje de error
        "500":
          description: Algo falló al obtener el usuario por ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si hubo un error al obtener el usuario
                  message:
                    type: string
                    description: Mensaje de error
  /api/users/delete/{id}:
    delete:
      summary: Elimina un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si el usuario fue eliminado
                  message:
                    type: string
                    description: Mensaje de éxito
                  deletedUser:
                    $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si el usuario no fue encontrado
                  message:
                    type: string
                    description: Mensaje de error
        "500":
          description: Algo falló al eliminar el usuario por ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indica si hubo un error al eliminar el usuario
                  message:
                    type: string
                    description: Mensaje de error
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
        name:
          type: string
          description: Nombre del usuario
        email:
          type: string
          description: Dirección de correo electrónico
        password:
          type: string
          description: Contraseña del usuario
        cartData:
          type: object
          description: Datos del carrito del usuario
        date:
          type: string
          format: date-time
          description: Fecha de creación del usuario
      example:
        _id: "yourUserId"
        name: "John Doe"
        email: "john.doe@example.com"
        password: "yourPasswordHash"  #
        cartData: {}
        date: "2024-01-22T12:00:00.000Z"  


